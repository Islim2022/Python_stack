D:\Desktop\Axsos\Python_stack\my_environments>call djangoPy3Env/Scripts/activate

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\my_environments>cd ..

(djangoPy3Env) D:\Desktop\Axsos\Python_stack>cd django

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django>cd django_fundamentals

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals>django-admin startproject Dojo_ninja

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals>cd Dojo_ninja

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py startapp main

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>code .

# After creating our models:

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py makemigrations
Migrations for 'main':
  main\migrations\0001_initial.py
    - Create model Dojo
    - Create model Ninjas

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, main, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying main.0001_initial... OK
  Applying sessions.0001_initial... OK

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py shell
Python 3.10.3 (tags/v3.10.3:a342a49, Mar 16 2022, 13:07:40) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)

from main.models import Dojo, Ninjas

1. Create 3 dojos
    Dojo_1 = Dojo.objects.create(name='codingdojo', state='US', city='New-york')              Dojo_2 = Dojo.objects.create(name='codingdojo', state='US', city='Boston')
    Dojo_3 = Dojo.objects.create(name='codingdojo', state='US', city='Vigas')

2. Delete the three dojos you created
    all_dojos = Dojo.objects.all()
    all_dojos.delete()

3. Create 3 additional dojos by using Dojo.objects.create
    Dojo_1 = Dojo.objects.create(name='codingdojo', state='US', city='New-york')
    Dojo_2 = Dojo.objects.create(name='codingdojo', state='US', city='Boston')
    Dojo_3 = Dojo.objects.create(name='codingdojo', state='US', city='Vigas')

4. Create 3 ninjas that belong to the first dojo you created.
    j = Dojo.objects.get(city='New-york')
    Ninjas.objects.create(first_name="Mark", last_name="Masri", dojo=j)
    Ninjas.objects.create(first_name="Omar", last_name="Braynt", dojo=j)
    Ninjas.objects.create(first_name="Hanei", last_name="Islim", dojo=j)

5. Create 3 more ninjas and have them belong to the second dojo you created.
   k = Dojo.objects.get(city='Boston')
   Ninjas.objects.create(first_name='Fadi', last_name='Kob', dojo = k)
   Ninjas.objects.create(first_name='Hanei', last_name='Sam', dojo = k)
   Ninjas.objects.create(first_name='Sabri', last_name='Omar', dojo = k)

6. Create 3 more ninjas and have them belong to the third dojo you created.
    M = Dojo.objects.get(city='Vigas')
    Ninjas.objects.create(first_name='Sam', last_name='Jaraa', dojo = M)
    Ninjas.objects.create(first_name='Hani', last_name='Kobi', dojo = M)
    Ninjas.objects.create(first_name='Sami', last_name='Haj', dojo = M)

7. Be able to retrieve all ninjas that belong to the first Dojo.
   Ninjas.objects.filter(dojo=j).values()

8. Be able to retrieve all ninjas that belong to the last Dojo.
   Ninjas.objects.filter(dojo=M).values()

9. Add a new text field called "desc" to your Dojo class
   Create and run the migration files to update the table in your database. If needed,       provide a default value of "old dojo"

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py makemigrations
Was the model main.Ninjas renamed to Ninja? [y/N] y
Migrations for 'main':
  main\migrations\0002_rename_ninjas_ninja_dojo_desc.py
    - Rename model Ninjas to Ninja
    - Add field desc to dojo

(djangoPy3Env) D:\Desktop\Axsos\Python_stack\django\django_fundamentals\Dojo_ninja>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, main, sessions
Running migrations:
  Applying main.0002_rename_ninjas_ninja_dojo_desc... OK

10. Create a new dojo

    from main.models import Dojo, Ninja
    new_dojo = Dojo.objects.create(name='codingdojo', state='US', city='Miami')
    print(new_dojo.desc)
    old dojo
